datasource db {
    provider = "sqlite"
    // url      = "postgresql://postgres:Qwerty@123@localhost:5432/AppDeployin"
    url      = env("DATABASE_URL")
}

// datasource db {
//     provider = "sqlite"
//     url      = "file:./data/app.db"
// }

generator clientWorker {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

model User {
    id                  String                @id @unique
    name                String
    OrganizationsPeople OrganizationsPeople[]
}

model Organizations {
    id                  String                @id @unique
    name                String                @unique
    displayName         String
    OrganizationsPeople OrganizationsPeople[]
    Apps                Apps[]
}

model OrganizationsPeople {
    userId         String
    organizationId String

    user         User          @relation(fields: [userId], references: [id])
    organization Organizations @relation(fields: [organizationId], references: [id])

    @@id([userId, organizationId])
}

model Apps {
    id          String @id @unique
    name        String
    displayName String
    osType      Int

    Organization    Organizations     @relation(fields: [organizationsId], references: [id])
    organizationsId String
    Artifacts       Artifacts[]
    ArtifactsGroups ArtifactsGroups[]

    @@unique([organizationsId, name])
}

model Artifacts {
    id            String   @id @unique
    fileObjectKey String   @unique
    versionName   String
    versionCode   String
    releaseNotes  String?
    createdAt     DateTime
    updatedAt     DateTime

    releaseId Int

    apps                   Apps                     @relation(fields: [appsId], references: [id])
    appsId                 String
    ArtifactsGroupsManager ArtifactsGroupsManager[]

    @@unique([appsId, releaseId])
}

model ArtifactsGroups {
    id   String @id @unique
    name String

    apps                   Apps                     @relation(fields: [appsId], references: [id])
    appsId                 String
    ArtifactsGroupsManager ArtifactsGroupsManager[]

    @@unique([appsId, name])
}

model ArtifactsGroupsManager {
    artifacts         Artifacts       @relation(fields: [artifactsId], references: [id])
    artifactsGroup    ArtifactsGroups @relation(fields: [artifactsGroupsId], references: [id])
    artifactsId       String
    artifactsGroupsId String

    @@unique([artifactsId, artifactsGroupsId])
}
