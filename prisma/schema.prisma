datasource db {
    provider = "postgresql"
    // url      = "postgresql://postgres:Qwerty@123@localhost:5432/AppDeployin"
    url      = env("DATABASE_URL")
}

// datasource db {
//     provider = "sqlite"
//     url      = "file:./data/app.db"
// }

generator clientWorker {
    provider = "prisma-client-js"
    // previewFeatures = ["driverAdapters"]
}

model User {
    id                  Int                   @id @default(autoincrement())
    name                String
    OrganizationsPeople OrganizationsPeople[]
}

model Organizations {
    id                  Int                   @id @default(autoincrement())
    name                String                @unique
    displayName         String
    OrganizationsPeople OrganizationsPeople[]
    Apps                Apps[]
}

model OrganizationsPeople {
    userId         Int
    organizationId Int

    user         User          @relation(fields: [userId], references: [id])
    organization Organizations @relation(fields: [organizationId], references: [id])

    @@id([userId, organizationId])
}

model Apps {
    id          Int    @id @default(autoincrement())
    name        String
    displayName String
    osType      Int

    Organization    Organizations     @relation(fields: [organizationsId], references: [id])
    organizationsId Int
    Artifacts       Artifacts[]
    ArtifactsGroups ArtifactsGroups[]

    @@unique([organizationsId, name])
}

model Artifacts {
    id            Int      @id @default(autoincrement())
    fileObjectKey String   @unique
    versionName   String
    versionCode   String
    releaseNotes  String?
    createdAt     DateTime
    updatedAt     DateTime

    releaseId Int

    apps                   Apps                     @relation(fields: [appsId], references: [id])
    appsId                 Int
    ArtifactsGroupsManager ArtifactsGroupsManager[]

    @@unique([appsId, releaseId])
}

model ArtifactsGroups {
    id   Int    @id @default(autoincrement())
    name String

    apps                   Apps                     @relation(fields: [appsId], references: [id])
    appsId                 Int
    ArtifactsGroupsManager ArtifactsGroupsManager[]

    @@unique([appsId, name])
}

model ArtifactsGroupsManager {
    artifacts         Artifacts       @relation(fields: [artifactsId], references: [id])
    artifactsGroup    ArtifactsGroups @relation(fields: [artifactsGroupsId], references: [id])
    artifactsId       Int
    artifactsGroupsId Int

    @@unique([artifactsId, artifactsGroupsId])
}
